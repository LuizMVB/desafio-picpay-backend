openapi: 3.0.3
info:
  title: PicPay
  description: Implementação do desafio proposto em https://github.com/PicPay/picpay-desafio-backend
  contact:
    email: lm.viana.barbosa@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
tags:
  - name: PicPay Simplificado
    description: Implementação do desafio proposto em https://github.com/PicPay/picpay-desafio-backend
servers:
  - url: http://localhost:8080
    description: Local server
paths:
  /user:
    post:
      tags:
        - User
      summary: Creates a user
      description: Creates a user
      operationId: create
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '405':
          description: Invalid input
  /auth:
    post:
      tags:
        - Auth
      summary: Perform the authentication to get token JWT
      description: Generates a JWT token by the user and password
      operationId: authenticate
      requestBody:
        description: Username and password
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: The generated token JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenJwt'
        '405':
          description: Invalid input
  /auth/refresh-token:
    post:
      tags:
        - Auth
      summary: Perform the authentication to get token JWT with the refresh token
      description: Generates a JWT token by the refresh token
      operationId: authRefreshToken
      requestBody:
        description: Refresh Token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
        required: true
      responses:
        '200':
          description: The generated token JWT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenJwt'
        '405':
          description: Invalid input
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:

    # Refresh Token
    RefreshToken:
      type:
        object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string
          example: abc123

    ## User
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123
        username:
          type: string
          example: bioguy

    ## Authentication
    Login:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: bioguy
        password:
          type: string
          example: abc123
    TokenJwt:
      type: object
      properties:
        token:
          type: string
          example: abcde12345
        refreshToken:
          type: string
          example: abcde12345